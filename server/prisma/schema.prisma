// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

//Qual bd eu tô usando ( como to usando postgres
// tem que olhar o .env, lá tem a variavel DATABASE_URL declarando o url do bd)

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Atualizar/Adicionar novas tabelas => yarn prisma migrate dev
model usuario {
  userId     Int         @id @default(autoincrement())
  email      String      @unique
  name       String?
  created_at DateTime    @default(now())
  password   String
  money      Int         @default(100)
  inv        inventario?
  album      album?
  click      String?
  clickb     String?
}

model gaturinha {
  gatId     Int                 @id @default(autoincrement())
  name      String
  image     String              @unique
  release   DateTime            @default(now())
  price     Int
  type      String
  desc      String
  gatProdEx gaturinha_product[]
}

model gaturinha_product {
  prodId  Int         @id @default(autoincrement())
  gat     gaturinha   @relation(fields: [gatId], references: [gatId], onDelete: Cascade, onUpdate: Cascade)
  gatId   Int
  inv     inventario? @relation(fields: [invId], references: [invId])
  invId   Int?
  album   album?      @relation(fields: [albumId], references: [albumId], onDelete: Cascade, onUpdate: Cascade)
  albumId Int?
}

model pacotefig {
  pacId     Int           @id @default(autoincrement())
  name      String        @default("Pacotinho")
  image     String        @default("https://i.imgur.com/GJGafhC.png")
  price     Int           @default(50)
  desc      String        @default("Alguém soltou uma bomba no bairro! Quais gatinhos mistériosos devem ter se escondido aqui?")
  pacProdEx pac_product[]
}

model pac_product {
  pacprodId Int         @id @default(autoincrement())
  pacotefig pacotefig?  @relation(fields: [PacId], references: [pacId], onDelete: Cascade, onUpdate: Cascade)
  PacId     Int?        @default(1)
  inv       inventario? @relation(fields: [invId], references: [invId], onDelete: Cascade, onUpdate: Cascade)
  invId     Int?
  gatId1    Int         
  gatId2    Int         
  gatId3    Int         
  gatId4    Int         
  gatId5    Int         
}

model inventario {
  invId       Int                 @id @default(autoincrement())
  user        usuario             @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  userId      Int                 @unique
  gat_prod    gaturinha_product[]
  pac_product pac_product[]
}

model album {
  albumId  Int                 @id @default(autoincrement())
  user     usuario             @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  userId   Int                 @unique
  gat_prod gaturinha_product[]
  price    Int                 @default(10000)
  catFed  String?
}
